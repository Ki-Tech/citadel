# Makefile for Citadel
#
# NOTE: normally you should not have to modify the Makefile.  All
# system-dependent configuration is in the "configure" script, which
# uses "Makefile.in" to generate a "Makefile".  In the rare instance
# that you have to modify something here, please take note:
# 1. Edit Makefile.in, -not- Makefile.
# 2. Send e-mail to ajc@uncensored.citadel.org and let me know what you
#    did, so any necessary changes can be put into the next release.
#
# $Id$
#
########################################################################

TARGETS=@TARGETS@
RUN_DIR=@MAKE_RUN_DIR@
SPOOL_DIR=@MAKE_SPOOL_DIR@
ETC_DIR=@MAKE_ETC_DIR@
DATA_DIR=@MAKE_DATA_DIR@
STATICDATA_DIR=@MAKE_STATICDATA_DIR@
DOC_DIR=@MAKE_DOC_DIR@
UTILBIN_DIR=@MAKE_UTILBIN_DIR@
DEPEND_FLAG=@DEPEND_FLAG@
all: $(TARGETS)

.SUFFIXES: .o .d .c

EXEEXT=@EXEEXT@

CLIENT_TARGETS=citadel$(EXEEXT) whobbs$(EXEEXT) stress$(EXEEXT)
SERVER_TARGETS=citserver
SERV_MODULES=crc16.o \
	md5.o \
	sha1.o \
	ical_dezonify.o

include Make_modules

UTIL_TARGETS=aidepost msgform \
	citmail userlist sendcommand getmail\

UTILBIN_TARGETS= base64 setup chkpw chkpwd

prefix=@prefix@
srcdir=@srcdir@

ACLOCAL=@ACLOCAL@
AUTH=@AUTH@
AUTOCONF=@AUTOCONF@
chkpwd_LIBS=@chkpwd_LIBS@
CC=@CC@
CFLAGS=@CFLAGS@ -I ./include/
CPPFLAGS=@CPPFLAGS@ -I. -I ./include/
DATABASE=@DATABASE@
DEFS=@DEFS@
LDFLAGS=@LDFLAGS@
LIBS=@LIBS@
LIBOBJS=@LIBOBJS@
INSTALL=@INSTALL@
INSTALL_DATA=@INSTALL_DATA@
RESOLV=@RESOLV@
SHELL=/bin/sh
SERVER_LDFLAGS=@SERVER_LDFLAGS@
SERVER_LIBS=@SERVER_LIBS@
SETUP_LIBS=@SETUP_LIBS@
YACC=@YACC@

# End configuration section

VPATH=$(srcdir)

SOURCES=aidepost.c auth.c base64.c chkpwd.c chkpw.c citadel.c citadel_ipc.c \
	citmail.c citserver.c client_chat.c client_passwords.c \
	clientsocket.c commands.c config.c control.c $(DATABASE) \
	domain.c serv_extensions.c file_ops.c genstamp.c getutline.c \
	housekeeping.c html.c ical_dezonify.c \
	internet_addressing.c ecrash.c \
	ipc_c_tcp.c locate_host.c md5.c sha1.c messages.c  \
	msgbase.c msgform.c parsedate.c policy.c \
	room_ops.c rooms.c routines.c routines2.c tuiconfig.c euidindex.c \
	screen.c sendcommand.c getmail.c \
	server_main.c \
	setup.c snprintf.c \
	stress.c support.c sysdep.c user_ops.c userlist.c \
	whobbs.c \
	crc16.c journaling.c citadel_dirs.c

include Make_sources

DEP_FILES=$(SOURCES:.c=.d) modules_init.d modules_upgrade.d

client: $(CLIENT_TARGETS)

server: $(SERVER_TARGETS) $(SERV_MODULES)

utils: $(UTIL_TARGETS) $(UTILBIN_TARGETS)

citadel$(EXEEXT): citadel.o citadel_ipc.o client_chat.o client_passwords.o \
	commands.o html.o ipc_c_tcp.o md5.o messages.o rooms.o routines.o \
	routines2.o tuiconfig.o screen.o citadel_dirs.o ecrash.o $(LIBOBJS)
	$(CC) citadel.o citadel_ipc.o client_chat.o client_passwords.o \
	commands.o html.o ipc_c_tcp.o md5.o messages.o rooms.o routines.o \
	routines2.o tuiconfig.o screen.o citadel_dirs.o ecrash.o $(LIBOBJS) \
	$(LDFLAGS) -o citadel $(LIBS)

.y.c:
	$(YACC) $(YFLAGS) $<
	mv -f y.tab.c $@

#
#

parsedate.o: parsedate.c

Make_sources: modules_init.c

Make_modules: modules_init.c

modules_upgrade.c: modules_init.c

modules_init.c: mk_module_init.sh $(SOURCES) 
	$(srcdir)/mk_module_init.sh

SERV_OBJS = server_main.o \
	user_ops.o citserver.o sysdep.o serv_extensions.o \
	$(DATABASE:.c=.o) domain.o \
	control.o policy.o config.o support.o room_ops.o \
	file_ops.o msgbase.o euidindex.o \
	locate_host.o housekeeping.o html.o \
	internet_addressing.o journaling.o \
	parsedate.o genstamp.o ecrash.o \
	clientsocket.o modules_init.o modules_upgrade.o $(AUTH) $(SERV_MODULES)

citserver: $(SERV_OBJS)
	$(CC) $(SERV_OBJS) $(LDFLAGS) $(SERVER_LDFLAGS) $(LIBS) $(SERVER_LIBS) $(RESOLV) -o citserver

.c.o:
	$(CC) $(CFLAGS) $(CPPFLAGS) $(DEFS) -c $< -o $@

aidepost: aidepost.o config.o
	$(CC) aidepost.o config.o citadel_dirs.o $(LDFLAGS) -o aidepost $(LIBS)

citmail: citmail.o citadel_dirs.o
	$(CC) citmail.o citadel_dirs.o $(LDFLAGS) -o citmail $(LIBS)

# setup does need LIBS defined, because it uses network functions which are in -lsocket -lnsl on Solaris.
setup: setup.o citadel_dirs.o
	$(CC) setup.o citadel_dirs.o $(LDFLAGS) -o setup $(LIBS) $(SETUP_LIBS)

chkpwd: chkpwd.o auth.o
	$(CC) chkpwd.o auth.o $(LDFLAGS) -o chkpwd $(chkpwd_LIBS)

chkpw: chkpw.o auth.o citadel_dirs.o
	$(CC) chkpw.o auth.o citadel_dirs.o $(LDFLAGS) -o chkpw $(chkpwd_LIBS)

whobbs$(EXEEXT): whobbs.o ipc_c_tcp.o citadel_ipc.o citadel_dirs.o $(LIBOBJS)
	$(CC) whobbs.o ipc_c_tcp.o citadel_ipc.o  citadel_dirs.o $(LIBOBJS) $(LDFLAGS) -o whobbs $(LIBS)

stress$(EXEEXT): stress.o ipc_c_tcp.o citadel_ipc.o citadel_dirs.o $(LIBOBJS)
	$(CC) stress.o ipc_c_tcp.o citadel_ipc.o citadel_dirs.o $(LIBOBJS) $(LDFLAGS) -o stress $(LIBS)

sendcommand: sendcommand.o ipc_c_tcp.o citadel_ipc.o config.o  $(LIBOBJS)
	$(CC) sendcommand.o ipc_c_tcp.o citadel_ipc.o config.o  \
	 citadel_dirs.o $(LIBOBJS) $(LDFLAGS) -o sendcommand $(LIBS)

getmail: getmail.o ipc_c_tcp.o citadel_ipc.o config.o  $(LIBOBJS)
	$(CC) getmail.o ipc_c_tcp.o citadel_ipc.o config.o  \
	 citadel_dirs.o $(LIBOBJS) $(LDFLAGS) -o getmail $(LIBS)

base64: base64.o
	$(CC) base64.o $(LDFLAGS) -o base64

userlist: userlist.o ipc_c_tcp.o citadel_ipc.o citadel_dirs.o $(LIBOBJS)
	$(CC) userlist.o ipc_c_tcp.o citadel_ipc.o citadel_dirs.o \
	$(LIBOBJS) $(LDFLAGS) -o userlist $(LIBS)

msgform: msgform.o
	$(CC) msgform.o $(LDFLAGS) -o msgform

.PHONY: install-data install-doc install-exec clean cleaner distclean

install: install-exec install-data install-doc
	@echo 
	@echo Installation is complete.
	@echo Now go to your Citadel directory and run 'setup'.
	@echo 

install-new: install-exec-new install-data-new install-doc-new
	@echo 
	@echo Installation is complete.
	@echo Now go to your Citadel directory and run 'setup'.
	@echo 

upgrade: install-exec install-doc
	@echo
	@echo Upgrade is complete.
	@echo Now go to your Citadel directory and run 'setup'.
	@echo

install-data:
	@for i in help messages network/spoolin network/spoolout \
		 network/systems; do \
		$(srcdir)/mkinstalldirs $(DESTDIR)$(prefix)/$$i; \
	done
	@for i in citadel.rc public_clients \
		 `find $(srcdir)/help $(srcdir)/messages $(srcdir)/network -type f | grep -v .svn`; do \
		echo $(INSTALL_DATA) $$i $(DESTDIR)$(prefix)/$$i; \
		$(INSTALL_DATA) $$i $(DESTDIR)$(prefix)/$$i; \
	done
	-@if test -d $(DESTDIR)/etc/pam.d; then \
		echo $(INSTALL_DATA) $(srcdir)/citadel.pam $(DESTDIR)/etc/pam.d/citadel; \
		$(INSTALL_DATA) $(srcdir)/citadel.pam $(DESTDIR)/etc/pam.d/citadel; \
	fi

install-data-new:
	@for i in network/spoolin network/spoolout network/systems; do \
		$(srcdir)/mkinstalldirs $(DESTDIR)$(RUN_DIR)/$$i; \
	done
	$(srcdir)/mkinstalldirs $(DESTDIR)$(ETC_DIR)/
	$(INSTALL_DATA) $(srcdir)/public_clients $(DESTDIR)$(ETC_DIR)/public_clients
	$(INSTALL_DATA) $(srcdir)/citadel.rc $(DESTDIR)$(ETC_DIR)/citadel.rc
	$(INSTALL_DATA) $(srcdir)/network/mail.aliases $(DESTDIR)$(ETC_DIR)/mail.aliases$

	$(srcdir)/mkinstalldirs $(DESTDIR)$(STATICDATA_DIR)/help
	$(srcdir)/mkinstalldirs $(DESTDIR)$(STATICDATA_DIR)/messages
	@for i in  \
		 `find $(srcdir)/help $(srcdir)/messages  -type f | grep -v .svn`; do \
		echo $(INSTALL_DATA) $$i $(DESTDIR)$(STATICDATA_DIR)/$$i; \
		$(INSTALL_DATA) $$i $(DESTDIR)$(STATICDATA_DIR)/$$i; \
	done
	$(srcdir)/mkinstalldirs $(DESTDIR)$(SPOOL_DIR)/network/spoolin
	$(srcdir)/mkinstalldirs $(DESTDIR)$(SPOOL_DIR)/network/spoolout
	$(srcdir)/mkinstalldirs $(DESTDIR)$(SPOOL_DIR)/network/systems
	-@if test -d $(DESTDIR)/etc/pam.d; then \
		echo $(INSTALL_DATA) $(srcdir)/citadel.pam $(DESTDIR)/etc/pam.d/citadel; \
		$(INSTALL_DATA) $(srcdir)/citadel.pam $(DESTDIR)/etc/pam.d/citadel; \
	fi
	@for i in bio bitbucket files images info userpics; do \
		$(srcdir)/mkinstalldirs $(DESTDIR)$(DATA_DIR)/$$i; \
	done

install-doc:
	@$(srcdir)/mkinstalldirs $(DESTDIR)$(prefix)/docs
	@for i in `find $(srcdir)/docs -type f | grep -v .svn`; do \
		echo $(INSTALL_DATA) $$i $(DESTDIR)$(prefix)/$$i; \
		$(INSTALL_DATA) $$i $(DESTDIR)$(prefix)/$$i; \
	done
	@$(srcdir)/mkinstalldirs $(DESTDIR)$(prefix)/techdoc
	@for i in `find $(srcdir)/techdoc -type f | grep -v .svn`; do \
		echo $(INSTALL_DATA) $$i $(DESTDIR)$(prefix)/$$i; \
		$(INSTALL_DATA) $$i $(DESTDIR)$(prefix)/$$i; \
	done
	echo $(INSTALL_DATA) README.txt $(DESTDIR)$(prefix)/README.txt
	$(INSTALL_DATA) README.txt $(DESTDIR)$(prefix)/README.txt

install-doc-new:
	@$(srcdir)/mkinstalldirs $(DESTDIR)$(DOC_DIR)/docs
	@for i in `find $(srcdir)/docs -type f | grep -v .svn`; do \
		echo $(INSTALL_DATA) $$i $(DESTDIR)$(DOC_DIR)/$$i; \
		$(INSTALL_DATA) $$i $(DESTDIR)$(DOC_DIR)/$$i; \
	done
	@$(srcdir)/mkinstalldirs $(DESTDIR)$(DOC_DIR)/techdoc
	@for i in `find $(srcdir)/techdoc -type f | grep -v .svn`; do \
		echo $(INSTALL_DATA) $$i $(DESTDIR)$(DOC_DIR)/$$i; \
		$(INSTALL_DATA) $$i $(DESTDIR)$(DOC_DIR)/$$i; \
	done
	$(INSTALL_DATA) README.txt $(DESTDIR)$(DOC_DIR)/README.txt

install-exec: all
	@for i in bio bitbucket files images info userpics; do \
		$(srcdir)/mkinstalldirs $(DESTDIR)$(prefix)/$$i; \
	done
	@for i in $(CLIENT_TARGETS) $(SERVER_TARGETS) $(UTIL_TARGETS) $(UTILBIN_TARGETS); do \
		if test -f $$i; then \
			echo $(INSTALL) $$i $(DESTDIR)$(prefix)/$$i; \
			$(INSTALL) $$i $(DESTDIR)$(prefix)/$$i; \
		fi \
	done
	$(srcdir)/mkinstalldirs $(DESTDIR)$(prefix)/unstripped
	cp $(SERVER_TARGETS) $(DESTDIR)$(prefix)/unstripped/

	@for i in utilsmenu database_cleanup.sh migrate_aliases.sh citadel-openldap.schema; do \
		if test -f $(srcdir)/$$i; then \
			echo $(INSTALL) $(srcdir)/$$i $(DESTDIR)$(prefix)/$$i; \
			$(INSTALL) $(srcdir)/$$i $(DESTDIR)$(prefix)/$$i; \
		fi \
	done

install-exec-new: all
	$(srcdir)/mkinstalldirs $(DESTDIR)/usr/sbin; 
	$(srcdir)/mkinstalldirs $(DESTDIR)/usr/bin; 
	$(srcdir)/mkinstalldirs $(DESTDIR)/usr/bin; 
	$(srcdir)/mkinstalldirs $(DESTDIR)$(UTILBIN_DIR); 
	$(srcdir)/mkinstalldirs $(DESTDIR)$(DOC_DIR);
	@for i in $(SERVER_TARGETS) $(UTIL_TARGETS); do \
		if test -f $$i; then \
			echo $(INSTALL) $$i $(DESTDIR)/usr/sbin/$$i; \
			$(INSTALL) $$i $(DESTDIR)/usr/sbin/$$i; \
		fi \
	done
	cp citserver $(DESTDIR)/$(UTILBIN_DIR)/citserver.unstripped
	cp migrate_aliases.sh $(DESTDIR)/$(UTILBIN_DIR)/
	@for i in $(UTILBIN_TARGETS); do \
		if test -f $$i; then \
			echo $(INSTALL) $$i $(DESTDIR)/$(UTILBIN_DIR)/$$i; \
			$(INSTALL) $$i $(DESTDIR)/$(UTILBIN_DIR)/$$i; \
		fi \
	done

	$(INSTALL) citmail $(DESTDIR)/usr/sbin/sendmail;
	@for i in $(CLIENT_TARGETS); do \
		if test -f $$i; then \
			echo $(INSTALL) $$i $(DESTDIR)/usr/bin/$$i; \
			$(INSTALL) $$i $(DESTDIR)/usr/bin/$$i; \
		fi \
	done
	@for i in utilsmenu database_cleanup.sh citadel-openldap.schema ; do \
		if test -f $(srcdir)/$$i; then \
			echo $(INSTALL) $(srcdir)/$$i $(DESTDIR)$(DOC_DIR)/$$i; \
			$(INSTALL) $(srcdir)/$$i $(DESTDIR)$(DOC_DIR)/$$i; \
		fi \
	done

clean:
	rm -f *.o 
	for i in $(srcdir)/modules/* ; do \
		rm -f $$i/*.o ;\
	done
	rm -f $(CLIENT_TARGETS) $(SERVER_TARGETS) $(UTIL_TARGETS) $(UTILBIN_TARGETS)


cleaner: clean
	rm -rf $(CLIENT_TARGETS) $(SERVER_TARGETS) $(UTIL_TARGETS) $(UTILBIN_TARGETS) database_cleanup.sh *.la
	rm -rf modules_upgrade.c modules_init.c modules_init.h Make_modules Make_sources

distclean: cleaner
	find . -name '*~' -o -name '.#*' | xargs rm -f
	rm -f Makefile sysdep.h config.cache config.log config.status *.d 
	for i in $(srcdir)/modules/* ; do \
		rm -f $$i/*.d ;\
	done

.c.d:
	@echo Checking dependencies for $<
	@$(CC) $(DEPEND_FLAG) $(CPPFLAGS) $< | sed -e 's!$*.o!$*.o $*/.o $@!' > $@
	@test -s $@ || rm -f $@

Makefile: $(srcdir)/Makefile.in config.status
	CONFIG_FILES=Makefile CONFIG_HEADERS= $(SHELL) ./config.status

config.status: $(srcdir)/configure
	$(SHELL) ./config.status --recheck

$(srcdir)/configure: $(srcdir)/configure.ac $(srcdir)/aclocal.m4
	cd $(srcdir) && $(AUTOCONF)

$(srcdir)/aclocal.m4: $(srcdir)/acinclude.m4
	cd $(srcdir) && $(ACLOCAL)

-include $(DEP_FILES)
