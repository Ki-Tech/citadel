# Makefile for Citadel/UX
#
# NOTE: normally you should not have to modify the Makefile.  All
# system-dependent configuration is in the "configure" script, which
# uses "Makefile.in" to generate a "Makefile".  In the rare instance
# that you have to modify something here, please take note:
# 1. Edit Makefile.in, -not- Makefile.
# 2. Send e-mail to ajc@uncnsrd.mt-kisco.ny.us and let me know what you
#    did, so any necessary changes can be put into the next release.
#
# $Id$
#
########################################################################

TARGETS=@TARGETS@
CHKPWD=@CHKPWD@

all: $(TARGETS)

.SUFFIXES: .ro .mo .d

EXEEXT=@EXEEXT@
SO=@SO@
CX=@CX@
SERV_ICQ=@SERV_ICQ@

CLIENT_TARGETS=citadel$(EXEEXT) whobbs$(EXEEXT)
SERVER_TARGETS=citserver setup $(CHKPWD)
SERV_MODULES=modules/serv_chat$(SO) modules/serv_vcard$(SO) \
	modules/serv_upgrade$(SO) \
	modules/serv_smtp$(SO) modules/serv_pop3$(SO) \
	modules/serv_inetcfg$(SO) \
	modules/serv_rwho$(SO) \
	modules/serv_bio$(SO) \
	modules/serv_expire$(SO) $(SERV_ICQ)
UTIL_TARGETS=aidepost netmailer netproc netsetup msgform readlog rcit \
	stats citmail netpoll mailinglist userlist sendcommand \
	base64 qpdecode
PROXY_TARGETS=proxy

prefix=@prefix@
srcdir=@srcdir@

AUTH=@AUTH@
DEFS=@DEFS@
CPPFLAGS=@CPPFLAGS@ -I.
CFLAGS=@CFLAGS@
CC=@CC@
GDBM=@GDBM@
RESOLV=@RESOLV@
LINK_SHARED=@LINK_SHARED@
LIBS=@LIBS@
LDFLAGS=@LDFLAGS@
SERVER_LDFLAGS=@SERVER_LDFLAGS@
PICFLAGS=@PICFLAGS@
CURSES=@CURSES@
NETLIBS=@NETLIBS@
chkpwd_LIBS=@chkpwd_LIBS@
LIBOBJS=@LIBOBJS@
CL_LIBOBJS=@CL_LIBOBJS@
PTHREAD_DEFS=@PTHREAD_DEFS@
PTHREAD_LIBS=@PTHREAD_LIBS@
CLIENT_PTLIBS=@CLIENT_PTLIBS@
INSTALL=@INSTALL@
INSTALL_DATA=@INSTALL_DATA@
SHELL=/bin/sh
AUTOCONF=@AUTOCONF@

# End configuration section

VPATH=$(srcdir)

SOURCES=aidepost.c citadel.c citmail.c citserver.c client_chat.c commands.c \
	config.c control.c database.c dynloader.c file_ops.c \
	housekeeping.c internetmail.c ipc_c_tcp.c locate_host.c \
	logging.c mailinglist.c messages.c msgbase.c msgform.c netmailer.c \
	netpoll.c netproc.c netsetup.c policy.c proxy.c rcit.c readlog.c \
	room_ops.c rooms.c routines.c routines2.c serv_chat.c serv_icq.c \
	serv_info.c serv_test.c setup.c snprintf.c stats.c serv_vcard.c \
	support.c sysdep.c tools.c user_ops.c userlist.c serv_expire.c \
	whobbs.c sendcommand.c mime_parser.c base64.c qpdecode.c getutline.c \
	auth.c chkpwd.c client_icq.c html.c vcard.c serv_upgrade.c \
	serv_smtp.c serv_pop3.c internet_addressing.c parsedate.c genstamp.c \
	domain.c clientsocket.c serv_inetcfg.c serv_rwho.c serv_bio.c

DEP_FILES=$(SOURCES:.c=.d)

client: $(CLIENT_TARGETS)

server: $(SERVER_TARGETS)

utils: $(UTIL_TARGETS)

serv_modules: $(SERV_MODULES)

#
#

citadel$(EXEEXT): ipc_c_tcp$(CX) citadel$(CX) rooms$(CX) routines$(CX) \
	routines2$(CX) messages$(CX) client_icq$(CX) \
	commands$(CX) client_chat$(CX) serv_info$(CX) tools$(CX) $(LIBOBJS)
	$(CC) ipc_c_tcp$(CX) citadel$(CX) rooms$(CX) routines$(CX) \
	routines2$(CX) messages$(CX) client_icq$(CX) \
	commands$(CX) client_chat$(CX) serv_info$(CX) tools$(CX) \
	$(LIBOBJS) $(LDFLAGS) -o citadel $(NETLIBS) $(CLIENT_PTLIBS)

netpoll: netpoll.o config.o ipc_c_tcp.o tools.o $(LIBOBJS)
	$(CC) netpoll.o config.o ipc_c_tcp.o tools.o \
	$(LIBOBJS) $(LDFLAGS) -o netpoll $(NETLIBS)

.c.o:
	$(CC) $(CFLAGS) $(CPPFLAGS) $(DEFS) -c $<

#
#

SERV_OBJS = citserver.ro user_ops.ro support.ro room_ops.ro file_ops.ro \
	msgbase.ro config.ro sysdep.ro locate_host.ro housekeeping.ro \
	database.ro control.ro logging.ro policy.ro dynloader.ro tools.ro \
	mime_parser.ro html.ro internet_addressing.ro \
	parsedate.ro genstamp.ro clientsocket.ro \
	$(AUTH) $(LIBOBJS:.o=.ro)

citserver: $(SERV_OBJS)
	$(CC) $(SERV_OBJS) $(LDFLAGS) $(SERVER_LDFLAGS) $(PTHREAD_LIBS) \
	$(LIBS) $(NETLIBS) $(GDBM) $(RESOLV) -o citserver

.c.ro:
	$(CC) $(CFLAGS) $(CPPFLAGS) $(DEFS) $(PTHREAD_DEFS) -c $< -o $@

modules/serv_chat.so: serv_chat.mo
	$(LINK_SHARED) -o modules/serv_chat.so serv_chat.mo

modules/serv_chat.mo: serv_chat.mo
	ln -f serv_chat.mo modules

.c.mo:
	$(CC) $(CFLAGS) $(CPPFLAGS) $(DEFS) $(PTHREAD_DEFS) $(PICFLAGS) -DPIC -c $< -o $@

modules/serv_test.so: serv_test.mo
	$(LINK_SHARED) -o modules/serv_test.so serv_test.mo

modules/serv_test.mo: serv_test.mo
	ln -f serv_test.mo modules

modules/serv_pop3.so: serv_pop3.mo
	$(LINK_SHARED) -o modules/serv_pop3.so serv_pop3.mo

modules/serv_pop3.mo: serv_pop3.mo
	ln -f serv_pop3.mo modules

modules/serv_inetcfg.so: serv_inetcfg.mo
	$(LINK_SHARED) -o modules/serv_inetcfg.so serv_inetcfg.mo

modules/serv_inetcfg.mo: serv_inetcfg.mo
	ln -f serv_inetcfg.mo modules

modules/serv_rwho.so: serv_rwho.mo
	$(LINK_SHARED) -o modules/serv_rwho.so serv_rwho.mo

modules/serv_rwho.mo: serv_rwho.mo
	ln -f serv_rwho.mo modules

modules/serv_bio.so: serv_bio.mo
	$(LINK_SHARED) -o modules/serv_bio.so serv_bio.mo

modules/serv_bio.mo: serv_bio.mo
	ln -f serv_bio.mo modules

modules/serv_expire.so: serv_expire.mo
	$(LINK_SHARED) -o modules/serv_expire.so serv_expire.mo

modules/serv_expire.mo: serv_expire.mo
	ln -f serv_expire.mo modules

modules/serv_icq.so: serv_icq.mo
	$(LINK_SHARED) -o modules/serv_icq.so serv_icq.mo

modules/serv_icq.mo: serv_icq.mo
	ln -f serv_icq.mo modules

modules/serv_upgrade.so: serv_upgrade.mo
	$(LINK_SHARED) -o modules/serv_upgrade.so serv_upgrade.mo

modules/serv_upgrade.mo: serv_upgrade.mo
	ln -f serv_upgrade.mo modules

modules/serv_vcard.so: serv_vcard.mo vcard.mo
	$(LINK_SHARED) -o modules/serv_vcard.so serv_vcard.mo vcard.mo

modules/serv_vcard.mo: serv_vcard.mo
	ln -f serv_vcard.mo modules

modules/vcard.mo: vcard.mo
	ln -f vcard.mo modules

modules/serv_smtp.so: serv_smtp.mo domain.mo
	$(LINK_SHARED) -o modules/serv_smtp.so serv_smtp.mo domain.mo

modules/serv_smtp.mo: serv_smtp.mo
	ln -f serv_smtp.mo modules

modules/domain.mo: domain.mo
	ln -f domain.mo modules

aidepost: aidepost.o config.o $(LIBOBJS)
	$(CC) aidepost.o config.o $(LIBOBJS) $(LDFLAGS) -o aidepost

#
# 'netmailer' needs to run setuid because it generates headers for Internet
# mail.  If it is not run setuid, all outgoing mail may always show as coming
# from your BBSUID rather than the actual sending user.
#
netmailer: netmailer.o internetmail.o config.o genstamp.o
	$(CC) netmailer.o config.o internetmail.o genstamp.o \
	$(LDFLAGS) -o netmailer

netproc: netproc.o config.o ipc_c_tcp.o tools.o $(LIBOBJS)
	$(CC) netproc.o config.o ipc_c_tcp.o tools.o \
	$(LIBOBJS) $(LDFLAGS) -o netproc $(NETLIBS) $(GDBM)

citmail: citmail.o config.o
	$(CC) citmail.o config.o $(LDFLAGS) -o citmail

mailinglist: mailinglist.o config.o internetmail.o
	$(CC) mailinglist.o config.o internetmail.o $(LDFLAGS) -o mailinglist

setup: setup.o tools.o
	$(CC) setup.o tools.o $(CURSES) $(NETLIBS) $(LDFLAGS) -o setup

chkpwd: chkpwd.o auth.o config.o
	$(CC) chkpwd.o auth.o config.o $(LDFLAGS) -o chkpwd $(chkpwd_LIBS)

netsetup: netsetup.o config.o
	$(CC) netsetup.o config.o $(LDFLAGS) -o netsetup

proxy: proxy.o ipc_c_tcp.o
	$(CC) proxy.o ipc_c_tcp.o $(LDFLAGS) -o proxy $(NETLIBS)

whobbs$(EXEEXT): whobbs.o ipc_c_tcp.o tools.o $(LIBOBJS)
	$(CC) whobbs.o ipc_c_tcp.o tools.o $(LIBOBJS) $(LDFLAGS) -o whobbs $(NETLIBS)

sendcommand: sendcommand.o ipc_c_tcp.o tools.o config.o $(LIBOBJS)
	$(CC) sendcommand.o ipc_c_tcp.o tools.o config.o \
	 $(LIBOBJS) $(LDFLAGS) -o sendcommand $(NETLIBS)

qpdecode: qpdecode.o
	$(CC) qpdecode.o $(LDFLAGS) -o qpdecode

base64: base64.o
	$(CC) base64.o $(LDFLAGS) -o base64

userlist: userlist.o ipc_c_tcp.o tools.o $(LIBOBJS)
	$(CC) userlist.o ipc_c_tcp.o tools.o \
	$(LIBOBJS) $(LDFLAGS) -o userlist $(NETLIBS)

msgform: msgform.o
	$(CC) msgform.o $(LDFLAGS) -o msgform

readlog: readlog.o config.o
	$(CC) readlog.o config.o $(LDFLAGS) -o readlog

rcit: rcit.o config.o
	$(CC) rcit.o config.o $(LDFLAGS) -o rcit

stats: stats.o ipc_c_tcp.o tools.o config.o $(LIBOBJS)
	$(CC) stats.o ipc_c_tcp.o tools.o config.o $(LIBOBJS) $(LDFLAGS) -o stats $(NETLIBS)

.PHONY: install-data install-doc install-exec clean cleaner distclean

install: install-exec install-data install-doc

install-data:
	@for i in help messages network/spoolin network/spoolout \
		 network/systems; do \
		./mkinstalldirs $(root)$(prefix)/$$i; \
	done
	@for i in citadel.rc public_clients \
		 `find help messages network -type f | grep -v CVS`; do \
		echo $(INSTALL_DATA) $$i $(root)$(prefix)/$$i; \
		$(INSTALL_DATA) $$i $(root)$(prefix)/$$i; \
	done
	-@if test -d $(root)/etc/pam.d; then \
		echo $(INSTALL_DATA) citadel.pam $(root)/etc/pam.d/citadel; \
		$(INSTALL_DATA) citadel.pam $(root)/etc/pam.d/citadel; \
	fi

install-doc:
	@./mkinstalldirs $(root)$(prefix)/techdoc
	@for i in *.txt `find techdoc -type f | grep -v CVS`; do \
		echo $(INSTALL_DATA) $$i $(root)$(prefix)/$$i; \
		$(INSTALL_DATA) $$i $(root)$(prefix)/$$i; \
	done

install-exec: all weekly
	@for i in bio bitbucket files images info modules userpics; do \
		./mkinstalldirs $(root)$(prefix)/$$i; \
	done
	@for i in $(CLIENT_TARGETS) $(SERVER_TARGETS) $(UTIL_TARGETS) \
		 $(PROXY_TARGETS) $(SERV_MODULES) utilsmenu weekly \
		 dnetsetup; do \
		if test -f $$i; then \
			echo $(INSTALL) $$i $(root)$(prefix)/$$i; \
			$(INSTALL) $$i $(root)$(prefix)/$$i; \
		fi \
	done
	@if test x`find $(root)$(prefix)/chkpwd -user root` = x$(root)$(prefix)/chkpwd; then \
		echo chmod u+s $(root)$(prefix)/chkpwd; \
		chmod u+s $(root)$(prefix)/chkpwd; \
	fi

clean:
	rm -f *.o *.ro *.mo

cleaner: clean
	rm -f $(CLIENT_TARGETS) $(SERVER_TARGETS) $(UTIL_TARGETS) \
		modules/*.[ms]o $(PROXY_TARGETS) so_locations

distclean: cleaner
	find . -name '*~' -or -name '.#*' | xargs rm -f
	rm -f Makefile sysdep.h config.cache config.log config.status *.d weekly

.c.d:
	@echo Checking dependencies for $<
	@$(CC) -M $(CPPFLAGS) $(PTHREAD_DEFS) $< | sed -e 's!$*.o!$*.o $*.ro $*.mo $@!' > $@
	@test -s $@ || rm -f $@

Makefile: $(srcdir)/Makefile.in config.status
	CONFIG_FILES=Makefile CONFIG_HEADERS= $(SHELL) ./config.status

config.status: $(srcdir)/configure
	$(SHELL) ./config.status --recheck

$(srcdir)/configure: $(srcdir)/configure.in $(srcdir)/aclocal.m4
	cd $(srcdir) && $(AUTOCONF)

weekly: $(srcdir)/weekly.in config.status
	CONFIG_FILES=weekly CONFIG_HEADERS= $(SHELL) ./config.status

-include $(DEP_FILES)
