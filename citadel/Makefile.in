# Makefile for Citadel/UX
#
# NOTE: normally you should not have to modify the Makefile.  All
# system-dependent configuration is in the "configure" script, which
# uses "Makefile.in" to generate a "Makefile".  In the rare instance
# that you have to modify something here, please take note:
# 1. Edit Makefile.in, -not- Makefile.
# 2. Send e-mail to ajc@uncnsrd.mt-kisco.ny.us and let me know what you
#    did, so any necessary changes can be put into the next release.
#
########################################################################

TARGETS=@TARGETS@

all: $(TARGETS)

.SUFFIXES: .ro .mo .d

CLIENT_TARGETS=citadel whobbs
SERVER_TARGETS=citserver setup
SERV_MODULES=modules/serv_chat.so modules/serv_test.so \
	modules/serv_upgrade.so modules/serv_expire.so
UTIL_TARGETS=aidepost netmailer netproc netsetup msgform \
	readlog rcit stats citmail netpoll mailinglist userlist sendcommand
PROXY_TARGETS=proxy

prefix=@prefix@
srcdir=@srcdir@

DEFS=@DEFS@
CPPFLAGS=@CPPFLAGS@ -I.
CFLAGS=@CFLAGS@
CC=@CC@
LIBS=@LIBS@
LDFLAGS=@LDFLAGS@
SERVER_LDFLAGS=@SERVER_LDFLAGS@
PICFLAGS=@PICFLAGS@
CURSES=@CURSES@
SNPRINTF=@SNPRINTF@
PTHREAD_DEFS=-D_REENTRANT
INSTALL=@INSTALL@
INSTALL_DATA=@INSTALL_DATA@
SHELL=/bin/sh
AUTOCONF=@AUTOCONF@

# End configuration section

VPATH=$(srcdir)

SOURCES=aidepost.c citadel.c citmail.c citserver.c client_chat.c commands.c \
	config.c control.c cux2ascii.c database.c dynloader.c file_ops.c \
	housekeeping.c internetmail.c ipc_c_tcp.c locate_host.c \
	logging.c mailinglist.c messages.c msgbase.c msgform.c netmailer.c \
	netpoll.c netproc.c netsetup.c policy.c proxy.c rcit.c readlog.c \
	room_ops.c rooms.c routines.c routines2.c serv_chat.c \
	serv_info.c serv_test.c serv_upgrade.c setup.c snprintf.c stats.c \
	support.c sysdep.c tools.c user_ops.c userlist.c serv_expire.c \
	whobbs.c sendcommand.c

DEP_FILES=$(SOURCES:.c=.d)

client: $(CLIENT_TARGETS)

server: $(SERVER_TARGETS)

utils: $(UTIL_TARGETS)

serv_modules: $(SERV_MODULES)

#
#

citadel: ipc_c_tcp.o citadel.o rooms.o routines.o routines2.o messages.o \
	commands.o client_chat.o serv_info.o tools.o $(SNPRINTF)
	$(CC) ipc_c_tcp.o citadel.o rooms.o routines.o routines2.o messages.o \
	commands.o client_chat.o serv_info.o tools.o $(SNPRINTF) $(LDFLAGS) \
	-o citadel

netpoll: netpoll.o config.o ipc_c_tcp.o tools.o $(SNPRINTF)
	$(CC) netpoll.o config.o ipc_c_tcp.o tools.o \
	$(SNPRINTF) $(LDFLAGS) -o netpoll

.c.o:
	$(CC) $(CFLAGS) $(CPPFLAGS) $(DEFS) -c $<

#
#

citserver: citserver.ro user_ops.ro support.ro room_ops.ro file_ops.ro \
	msgbase.ro config.ro sysdep.ro locate_host.ro \
	housekeeping.ro database.ro control.ro logging.ro \
	policy.ro dynloader.ro tools.ro $(SNPRINTF:.o=.ro)
	$(CC) \
		citserver.ro user_ops.ro room_ops.ro file_ops.ro support.ro \
		msgbase.ro config.ro sysdep.ro locate_host.ro \
		housekeeping.ro database.ro control.ro logging.ro \
		policy.ro dynloader.ro tools.ro $(SNPRINTF:.o=.ro)\
		$(LDFLAGS) $(SERVER_LDFLAGS) $(LIBS) -o citserver

.c.ro:
	$(CC) $(CFLAGS) $(CPPFLAGS) $(DEFS) $(PTHREAD_DEFS) -c $< -o $@

modules/serv_chat.so: serv_chat.mo
	$(CC) -shared -o modules/serv_chat.so serv_chat.mo

.c.mo:
	$(CC) $(CFLAGS) $(CPPFLAGS) $(DEFS) $(PTHREAD_DEFS) $(PICFLAGS) -DPIC -c $< -o $@

modules/serv_test.so: serv_test.mo
	$(CC) -shared -o modules/serv_test.so serv_test.mo

modules/serv_upgrade.so: serv_upgrade.mo
	$(CC) -shared -o modules/serv_upgrade.so serv_upgrade.mo

modules/serv_expire.so: serv_expire.mo
	$(CC) -shared -o modules/serv_expire.so serv_expire.mo

aidepost: aidepost.o config.o $(SNPRINTF)
	$(CC) aidepost.o config.o $(SNPRINTF) $(LDFLAGS) -o aidepost

#
# 'netmailer' needs to run setuid because it generates headers for Internet
# mail.  If it is not run setuid, all outgoing mail may always show as coming
# from your BBSUID rather than the actual sending user.
#
netmailer: netmailer.o internetmail.o config.o
	$(CC) netmailer.o config.o internetmail.o $(LDFLAGS) -o netmailer

netproc: netproc.o config.o ipc_c_tcp.o tools.o $(SNPRINTF)
	$(CC) netproc.o config.o ipc_c_tcp.o tools.o \
	$(SNPRINTF) $(LDFLAGS) -o netproc

citmail: citmail.o config.o internetmail.o $(SNPRINTF)
	@echo "*"
	@echo "*                 ###### IMPORTANT ######"
	@echo "* To allow Citadel users to receive Internet mail, you must"
	@echo "* set this program to be your local mail delivery agent."
	@echo "*"
	$(CC) citmail.o config.o internetmail.o $(SNPRINTF) $(LDFLAGS) -o citmail

mailinglist: mailinglist.o config.o internetmail.o
	$(CC) mailinglist.o config.o internetmail.o $(LDFLAGS) -o mailinglist

setup: setup.o
	$(CC) setup.o $(CURSES) $(LDFLAGS) -o setup

netsetup: netsetup.o config.o
	$(CC) netsetup.o config.o $(LDFLAGS) -o netsetup

proxy: proxy.o ipc_c_tcp.o
	$(CC) proxy.o ipc_c_tcp.o $(LDFLAGS) -o proxy

whobbs: whobbs.o ipc_c_tcp.o tools.o $(SNPRINTF)
	$(CC) whobbs.o ipc_c_tcp.o tools.o $(SNPRINTF) $(LDFLAGS) -o whobbs

sendcommand: sendcommand.o ipc_c_tcp.o tools.o config.o $(SNPRINTF)
	$(CC) sendcommand.o ipc_c_tcp.o tools.o config.o \
	 $(SNPRINTF) $(LDFLAGS) -o sendcommand

userlist: userlist.o ipc_c_tcp.o tools.o $(SNPRINTF)
	$(CC) userlist.o ipc_c_tcp.o tools.o \
	$(SNPRINTF) $(LDFLAGS) -o userlist

msgform: msgform.o
	$(CC) msgform.o $(LDFLAGS) -o msgform

readlog: readlog.o config.o
	$(CC) readlog.o config.o $(LDFLAGS) -o readlog

rcit: rcit.o config.o
	$(CC) rcit.o config.o $(LDFLAGS) -o rcit
	@echo "*"
	@echo "* NOTE: TO RECEIVE CITADEL TRAFFIC VIA THE RCIT PROGRAM (ESPECIALLY"
	@echo "* IF YOU ARE GATEWAYING TO USENET) YOU MUST LINK RNEWS TO RCIT:"
	@echo "* ln -s rcit /usr/bin/rnews"
	@echo "*"

stats: stats.o config.o
	$(CC) stats.o config.o $(LDFLAGS) -o stats

.PHONY: install-data install-doc install-exec clean cleaner distclean

install: install-exec install-data install-doc

install-data:
	for i in help messages network/spoolin network/spoolout \
		 network/systems; do \
		./mkinstalldirs $(prefix)/$$i; \
	done
	for i in citadel.rc public_clients \
		 `find help messages network -type f | grep -v CVS`; do \
		$(INSTALL_DATA) $$i $(prefix)/$$i; \
	done
	chmod 700 $(prefix)/sendcommand

install-doc:
	./mkinstalldirs $(prefix)/techdoc
	for i in *.txt `find techdoc -type f | grep -v CVS`; do \
		$(INSTALL_DATA) $$i $(prefix)/$$i; \
	done

install-exec: all
	for i in bio bitbucket files images info modules userpics; do \
		./mkinstalldirs $(prefix)/$$i; \
	done
	for i in $(CLIENT_TARGETS) $(SERVER_TARGETS) $(UTIL_TARGETS) \
		 $(PROXY_TARGETS) $(SERV_MODULES) utilsmenu weekly \
		 dnetsetup; do \
		test -f $$i && $(INSTALL) $$i $(prefix)/$$i; \
	done

clean:
	rm -f *.o *.ro *.mo

cleaner: clean
	rm -f $(CLIENT_TARGETS) $(SERVER_TARGETS) $(UTIL_TARGETS) \
		$(SERV_MODULES) $(PROXY_TARGETS) so_locations

distclean: cleaner
	rm -f Makefile sysdep.h config.cache config.log config.status *.d

.c.d:
	$(CC) -M $(CPPFLAGS) $< | sed -e 's!$*.o!$*.o $*.ro $*.mo $@!' > $@
	test -s $@ || rm -f $@

Makefile: $(srcdir)/Makefile.in config.status
	CONFIG_FILES=Makefile CONFIG_HEADERS= $(SHELL) ./config.status

config.status: $(srcdir)/configure
	$(SHELL) ./config.status --recheck

$(srcdir)/configure: $(srcdir)/configure.in $(srcdir)/aclocal.m4
	cd $(srcdir) && $(AUTOCONF)

-include $(DEP_FILES)
