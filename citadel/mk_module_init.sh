#!/bin/sh
#
# Script to generate $C_FILE
#

ECHO=/bin/echo

MINUS_e=X`$ECHO -n -e`
if [ $MINUS_e != "X" ] ; then
	MINUS_e=""
else
	MINUS_e="-e"
fi

MINUS_E=X`$ECHO -n -E`
if [ $MINUS_E != "X" ] ; then
	MINUS_E=""
else
	MINUS_E="-E"
fi


CUR_DIR=`pwd`
C_FILE="$CUR_DIR/modules_init.c"
H_FILE="$CUR_DIR/modules_init.h"

$ECHO $MINUS_e "Scanning extension modules for entry points."
$ECHO $MINUS_e "This version of echo $ECHO supports $MINUS_e $MINUS_E."

#start ofs the files which inturn removes any existing file
#
$ECHO $MINUS_e "/*" > $C_FILE
$ECHO $MINUS_e " * $C_FILE" >> $C_FILE
$ECHO $MINUS_e " * Auto generated by mk_modules_init.sh DO NOT EDIT THIS FILE" >> $C_FILE
$ECHO $MINUS_e " */\n\n\n" >> $C_FILE

#echo $MINUS_e "#include \"sysdep.h\"\n" >> $C_FILE
$ECHO $MINUS_e "#include <stdlib.h>\n" >> $C_FILE
#echo $MINUS_e "#include <ctype.h>\n" >> $C_FILE
#echo $MINUS_e "#include \"citadel.h\"\n" >> $C_FILE
$ECHO $MINUS_e "#include \"modules_init.h\"\n" >> $C_FILE
$ECHO $MINUS_e "#include \"sysdep_decls.h\"\n" >> $C_FILE
$ECHO $MINUS_e "\n\n\n" >> $C_FILE
$ECHO $MINUS_e "void LogPrintMessages(long err);" >> $C_FILE
$ECHO $MINUS_e "static long DetailErrorFlags;" >> $C_FILE
$ECHO $MINUS_e "\n\n\n" >> $C_FILE

$ECHO $MINUS_e "void initialise_modules (void)" >> $C_FILE
$ECHO $MINUS_e "{" >> $C_FILE
$ECHO $MINUS_e "\tlong filter;\n\n" >> $C_FILE
$ECHO $MINUS_e -n "\t" >> $C_FILE
$ECHO $MINUS_E "lprintf (CTDL_INFO, \"New citadel module init proceedure.\n\");" >> $C_FILE

#start the header file
$ECHO $MINUS_e "/*" > $H_FILE
$ECHO $MINUS_e " * $H_FILE" >> $H_FILE
$ECHO $MINUS_e " * Auto generated by mk_modules_init.sh DO NOT EDIT THIS FILE" >> $H_FILE
$ECHO $MINUS_e " */\n\n\n" >> $H_FILE
$ECHO $MINUS_e "#ifndef MODULES_INIT_H" >> $H_FILE
$ECHO $MINUS_e "#define MODULES_INIT_H\n" >> $H_FILE
$ECHO $MINUS_e "#include \"ctdl_module.h\"\n" >> $H_FILE
$ECHO $MINUS_e "void initialise_modules (void) ;\n" >> $H_FILE


for i in serv_*.c
do
	RES=X`grep CTDL_MODULE_INIT $i | cut -f2 -d\( | cut -f1 -d\)`
	if [ $RES != "X" ] ; then
		RES_OUT=`echo $RES | cut -b2-`
		echo $MINUS_e "Found entry point in file $i"
		echo $MINUS_e -n "\t" >> $C_FILE
		echo $MINUS_E "lprintf (CTDL_INFO, \"%s\n\", CTDL_INIT_CALL($RES_OUT));" >> $C_FILE
		echo $MINUS_E "CTDL_MODULE_INIT($RES_OUT) ;" >> $H_FILE
	fi
done


if [ -d "modules" ] ; then
	cd modules
	for j in *
	do
		if [ -d $j ] ; then
			cd $j
			for k in *.c
			do
				if [ -f "$k" ] ; then
					RES=X`grep CTDL_MODULE_INIT $k | cut -f2 -d\( | cut -f1 -d\)`
					if [ $RES != "X" ] ; then
						RES_OUT=`echo $RES | cut -b2-`
						echo $MINUS_e "Found entry point in file modules/$j/$k"
						echo $MINUS_e -n "\t" >> $C_FILE
						echo $MINUS_E "lprintf (CTDL_INFO, \"%s\n\", CTDL_INIT_CALL($RES_OUT));" >> $C_FILE
						echo $MINUS_E "CTDL_MODULE_INIT($RES_OUT) ;" >> $H_FILE
					fi
				fi
			done
			cd ..
		fi
	done
fi

cd $CUR_DIR

if [ -d "user_modules" ] ; then
	cd user_modules
	for j in *
	do
		if [ -d $j ] ; then
			cd $j
			for k in *.c
			do
				if [ -f "$k" ] ; then
					RES=X`grep CTDL_MODULE_INIT $k | cut -f2 -d\( | cut -f1 -d\)`
					if [ $RES != "X" ] ; then
						RES_OUT=`echo $RES | cut -b2-`
						echo $MINUS_e "Found entry point in file user_modules/$j/$k"
						echo $MINUS_e -n "\t" >> $C_FILE
						echo $MINUS_E "lprintf (CTDL_INFO, \"%s\n\", CTDL_INIT_CALL($RES_OUT));" >> $C_FILE
						echo $MINUS_E "CTDL_MODULE_INIT($RES_OUT) ;" >> $H_FILE
					fi
				fi
			done
			cd ..
		fi
	done
fi

cd $CUR_DIR

$ECHO $MINUS_e "\n\n" >> $C_FILE
$ECHO $MINUS_e "\tfor (filter = 1; filter != 0; filter = filter << 1)" >> $C_FILE
$ECHO $MINUS_e "\t\tif ((filter & DetailErrorFlags) != 0)" >> $C_FILE
$ECHO $MINUS_e "\t\t\tLogPrintMessages(filter);" >> $C_FILE
$ECHO $MINUS_e "}" >> $C_FILE


$ECHO $MINUS_e "\n#endif /* MODULES_INIT_H */" >> $H_FILE
