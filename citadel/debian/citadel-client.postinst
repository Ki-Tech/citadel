#! /bin/sh
# postinst.skeleton
# Skeleton maintainer script showing all the possible cases.
# Written by Charles Briscoe-Smith, March-June 1998.  Public Domain.

# Abort if any command returns an error value
set -e

# This script is called as the last step of the installation of the
# package.  All the package's files are in place, dpkg has already done
# its automatic conffile handling, and all the packages we depend of
# are already fully installed and configured.

case "$1" in
  configure)
    # Configure this package.  If the package must prompt the user for
    # information, do it here.
    if ! getent group citadel >/dev/null; then 
		groupadd citadel
	fi
	if ! getent passwd citadel >/dev/null; then 
		adduser --system --ingroup citadel --home /var/lib/citadel \
			--gecos "Citadel system user" --shell /bin/sh \
			--disabled-password citadel
	fi
	mkdir -p /etc/citadel
	chown citadel:citadel /etc/citadel
	gunzip -c  /usr/share/doc/citadel-client/examples/citadel.rc.gz> /tmp/citadel.rc
	ucf /tmp/citadel.rc /etc/citadel/citadel.rc
	rm -f /tmp/citadel.rc

    ### We could also do this on the fly. The following is from Tore
    ### Anderson:
    
    #. /usr/share/debconf/confmodule

    ### find out what the user answered.
    #  db_get foo/run_on_boot
    #  run_on_boot=$RET
    #  db_stop

    ### safely create a temporary file to generate our suggested
    ### configuration file.
    #    tempfile=`tempfile`
    #    cat << _eof > $tempfile
    ### Configuration file for Foo.

    ### this was answered by you, the user in a debconf dialogue
    #  RUNONBOOT=$run_on_boot

    ### this was not, as it has a sane default value.
    #  COLOUROFSKY=blue

    #_eof

    ### Note that some versions of debconf do not release stdin, so
    ### the following invocation of ucf may not work, since the stdin
    ### is never coneected to ucfr.

    ### now, invoke ucf, which will take care of the rest, and ask
    ### the user if he wants to update his file, if it is modified.
    #ucf $tempfile /etc/foo.conf

    ### done! now we'll just clear up our cruft.
    #rm -f $tempfile


    #### There are three sub-cases:
    ###if test "${2+set}" != set; then
    ###  # We're being installed by an ancient dpkg which doesn't remember
    ###  # which version was most recently configured, or even whether
    ###  # there is a most recently configured version.
    ###  :
	###
    ###elif test -z "$2" -o "$2" = "<unknown>"; then
    ###  # The package has not ever been configured on this system, or was
    ###  # purged since it was last configured.
    ###  :
	###
    ###else
    ###  # Version $2 is the most recently configured version of this
    ###  # package.
    ###  :
	###
    ###fi 
	;;
  abort-upgrade)
    # Back out of an attempt to upgrade this package FROM THIS VERSION
    # to version $2.  Undo the effects of "prerm upgrade $2".
    :

    ;;
  abort-remove)
    ###if test "$2" != in-favour; then
    ###  echo "$0: undocumented call to \`postinst $*'" 1>&2
    ###  exit 0
    ###fi
    #### Back out of an attempt to remove this package, which was due to
    #### a conflict with package $3 (version $4).  Undo the effects of
    #### "prerm remove in-favour $3 $4".
    ###:

    ;;
  abort-deconfigure)
    ###if test "$2" != in-favour -o "$5" != removing; then
    ###  echo "$0: undocumented call to \`postinst $*'" 1>&2
    ###  exit 0
    ###fi
    #### Back out of an attempt to deconfigure this package, which was
    #### due to package $6 (version $7) which we depend on being removed
    #### to make way for package $3 (version $4).  Undo the effects of
    #### "prerm deconfigure in-favour $3 $4 removing $6 $7".
    ###:

    ;;
  *) echo "$0: didn't understand being called with \`$1'" 1>&2
     exit 0;;
esac

exit 0
